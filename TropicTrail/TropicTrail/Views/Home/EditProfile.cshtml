@model TropicTrail.UserInformation

@{
    ViewBag.Title = "EditProfile";
}

<link href="~/Content/css/EditProfile.css" rel="stylesheet" />

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Edit Profile</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            <label for="profilePicture">Profile Picture</label>
                            <input type="file" name="profilePicture" id="profilePicture" accept="image/*" onchange="previewProfilePicture(event)" />
                            <img id="profilePicturePreview" src="#" alt="Preview" style="display: none; max-width: 200px; max-height: 200px;" />
                            @Html.ValidationMessageFor(model => model.profilePic, "", new { @class = "text-danger" })
                        </div>

                        <div class="row">
                            <div class="col-md-6">                              
                                <div class="form-group">
                                    <label for="lastName">Last Name</label>
                                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label for="firstName">First Name</label>
                                    @Html.EditorFor(model => model.fistName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.fistName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label for="phone">Phone</label>
                                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label for="email">Email</label>
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="street">Street</label>
                                    @Html.EditorFor(model => model.street, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.street, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label for="city">City</label>
                                    @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label for="state">State</label>
                                    @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label for="zipCode">Zip Code</label>
                                    @Html.EditorFor(model => model.zipCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.zipCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Submit" class="btn btn-primary" />
                            </div>
                        </div>                                              
                    }
                </div>
            </div>
        </div>
    </div>
</div>
